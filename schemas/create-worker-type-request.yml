$schema:  http://json-schema.org/draft-04/schema#
title:                      "Create Worker Type Request"
description: |
  A worker launchSpecification and required metadata
type:                       object
properties:
  launchSpec:
    type: object
    description: |
      Launch Specification entries which are used in all regions and all instance types
  description:
    type: string
    description: |
      A string which describes what this image is for and hints on using it
  owner:
    type: string
    description: |
      A string which identifies the owner of this worker type
  secrets:
    type: object
    description: |
      Static secrets entries which are used in all regions and all instance types
  userData:
    type: object
    description: |
      UserData entries which are used in all regions and all instance types
  scopes:
    type: array
    items:
      type: string
      pattern: "^[\x20-\x7e]*$"
    description: |
      Scopes to issue credentials to for all regions Scopes must be composed of
      printable ASCII characters and spaces.
  minCapacity:
    type: number
    description: |
      Minimum number of capacity units to be provisioned.  A capacity unit
      is an abstract unit of capacity, where one capacity unit is roughly
      one task which should be taken off the queue
  maxCapacity:
    type: number
    description: |
      Maximum number of capacity units to be provisioned.
  scalingRatio:
    type: number
    description: |
      A scaling ratio of `0.2` means that the provisioner will attempt to keep
      the number of pending tasks around 20% of the provisioned capacity.
      This results in pending tasks waiting 20% of the average task execution
      time before starting to run.
      A higher scaling ratio often results in better utilization and longer
      waiting times. For workerTypes running long tasks a short scaling ratio
      may be preferred, but for workerTypes running quick tasks a higher scaling
      ratio may increase utilization without major delays.
      If using a scaling ratio of 0, the provisioner will attempt to keep the
      capacity of pending spot requests equal to the number of pending tasks.
  minPrice:
    type: number
    description: |
      Minimum price to pay for an instance.  A Price is considered to be the
      Amazon Spot Price multiplied by the utility factor of the InstantType
      as specified in the instanceTypes list.  For example, if the minPrice
      is set to $0.5 and the utility factor is 2, the actual minimum bid
      used will be $0.25
  maxPrice:
    type: number
    description: |
      Maximum price we'll pay.  Like minPrice, this takes into account the
      utility factor when figuring out what the actual SpotPrice submitted
      to Amazon will be
  canUseOndemand:
    type: boolean
    description: |
      True if this worker type is allowed on demand instances.  Currently
      ignored
  canUseSpot:
    type: boolean
    description: |
      True if this worker type is allowed spot instances.  Currently ignored
      as all instances are Spot
  instanceTypes:
    type: array
    items:
      type: object
      description: Instance Type configuration
      properties:
        instanceType:
          description: |
            InstanceType name for Amazon.
          type: string
        capacity:
          description: |
            This number represents the number of tasks that this instance type
            is capable of running concurrently.  This is used by the provisioner
            to know how many pending tasks to offset a pending instance of this
            type by
          type: number
        utility:
          description: |
            This number is a relative measure of performance between two instance
            types.  It is multiplied by the spot price from Amazon to figure out
            which instance type is the cheapest one
          type: number
        launchSpec:
          type: object
          description: |
            LaunchSpecification entries unique to this InstanceType
        secrets:
          type: object
          description: |
            Static Secrets unique to this InstanceType
        userData:
          type: object
          description: |
            UserData entries unique to this InstanceType
        scopes:
          type: array
          items:
            type: string
            pattern: "^[\x20-\x7e]*$"
          description: |
            Scopes which should be included for this InstanceType.  Scopes must
            be composed of printable ASCII characters and spaces.
      required:
        - instanceType
        - capacity
        - utility
        - launchSpec
        - secrets
        - userData
        - scopes
      additionalProperties: false
  regions:
    type: array
    items:
      type: object
      description: Region configuration
      properties:
        region:
          type: string
          description: |
            The Amazon AWS Region being configured.  Example: us-west-1
          enum:
            - us-west-2
            - us-east-1
            - us-west-1
            - eu-central-1
        launchSpec:
          type: object
          description: |
            LaunchSpecification entries unique to this Region
          properties:
            ImageId:
              type: string
              description: Per-region AMI ImageId
          required:
            - ImageId
        secrets:
          type: object
          description: |
            Static Secrets unique to this Region
        userData:
          type: object
          description: |
            UserData entries unique to this Region
        scopes:
          type: array
          items:
            type: string
            pattern: "^[\x20-\x7e]*$"
          description: |
            Scopes which should be included for this Region.  Scopes must be
            composed of printable ASCII characters and spaces.
      additionalProperties: false
      required:
        - region
        - launchSpec
        - secrets
        - userData
        - scopes
additionalProperties: false
required:
  - launchSpec
  - userData
  - secrets
  - scopes
  - maxCapacity
  - scalingRatio
  - minPrice
  - maxPrice
  - instanceTypes
  - regions
  - description
  - owner
