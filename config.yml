---

defaults:
  app:
    publishQueueMetadata: !env:bool PUBLISH_METADATA
    iterationInterval: !env:number ITERATION_INTERVAL
    describeInstanceDelay: !env:number DESCRIBE_INSTANCE_DELAY
    describeSpotRequestDelay: !env:number DESCRIBE_SPOT_REQUEST_DELAY
    maxInstanceLife: '- 96 hours'
    provisionerId: !env PROVISIONER_ID
    description: 'No description'
    stability: 'experimental'
    declareQueueMetadata: false
    workerTypeTableName: DevWorkerTypes2
    secretTableName: DevWorkerSecrets2
    workerStateTableName: DevWorkerState2
    awsInstancePubkey: !env AWS_INSTANCE_PUBKEY
    awsKeyPrefix: "aws-provisioner-dev-managed:"
    statsComponent: aws-provisioner-dev
    exchangePrefix: "v1/"
    allowedRegions:
      - 'us-west-1'
      - 'us-west-2'
      - 'us-east-1'
      - 'us-east-2'
      - 'eu-central-1'

    # Key for signing in base.Entity (sufficiently random string required)
    tableSigningKey:          !env TABLE_SIGNING_KEY
    # Key for data encryption in base.Entity (32 random bytes as base64)
    tableCryptoKey:           !env TABLE_CRYPTO_KEY

  ec2manager:
    baseUrl: !env EC2_MANAGER_BASEURL

  taskcluster:
    authBaseUrl: https://auth.taskcluster.net/v1
    queueBaseUrl: https://queue.taskcluster.net/v1
    credentials:
      clientId: !env TASKCLUSTER_CLIENT_ID
      accessToken: !env TASKCLUSTER_ACCESS_TOKEN

  monitoring:
    project: !env MONITORING_PROJECT
    enable: !env:bool MONITORING_ENABLE

  server:
    port: 5557
    publicUrl: localhost:5557
    env: development
    forceSSL: false
    trustProxy: false

  azure:
    account: !env AZURE_ACCOUNT_NAME
  azureBlob:
    accountName: !env AZURE_BLOB_ACCOUNT_NAME
    accountKey: !env AZURE_BLOB_ACCOUNT_KEY
  pulse:
    username: !env PULSE_USERNAME
    password: !env PULSE_PASSWORD

  aws:
    # Credentials with access to artifact buckets and
    # references/schemas.taskcluster.net if you wish to publish meta-data
    accessKeyId: !env AWS_ACCESS_KEY_ID
    secretAccessKey: !env AWS_SECRET_ACCESS_KEY
    region: us-west-2
    apiVersion: 2014-01-01
    maxRetries: 10

  deadmanssnitch:
    api:
      key: !env DEADMANSSNITCH_API_KEY
    iterationSnitch: !env DEADMANSSNITCH_ITERATION_SNITCH
# Configuration in production
production:
  app:
    provisionerId: aws-provisioner-v1
    description: |
      The provisioner managing all EC2 instances for Taskcluster, for both Gecko-related
      workerTypes and non-Gecko-related workertypes.
    stability: 'stable'
    declareQueueMetadata: true
    workerTypeTableName: WorkerTypes
    secretTableName: Secrets
    workerStateTableName: WorkerState
    publishQueueMetadata: true
    publishMetaData: true
    statsComponent: aws-provisioner-v1
    awsKeyPrefix: "aws-provisioner-v1-managed:"
    allowedRegions: !env:list ALLOWED_REGIONS
  server:
    publicUrl: https://aws-provisioner.taskcluster.net
    port: !env:number PORT
    env: production
    forceSSL: true
    trustProxy: true
  ec2manager:
    baseUrl: https://ec2-manager.herokuapp.com/v1

staging:
  app:
    provisionerId: staging-aws
    description: |
      Staging instance for the AWS provisioner. Not for production use.
    stability: 'experimental'
    declareQueueMetadata: true
    workerTypeTableName: StagingWorkerTypes
    secretTableName: StagingSecrets
    workerStateTableName: StagingWorkerState
    publishQueueMetadata: true
    statsComponent: staging-aws
    awsKeyPrefix: "ec2-manager-staging:"
    describeInstanceDelay: 5000
    describeSpotRequestDelay: 5000
    allowedRegions: !env:list ALLOWED_REGIONS
  server:
    publicUrl: https://provisioner-staging.herokuapp.com
    port: !env:number PORT
    env: development
    forceSSL: true
    trustProxy: true
  ec2manager:
    baseUrl: https://ec2-manager-staging.herokuapp.com/v1

development:
  deadmanssnitch:
    api:
      key: 'nokey'
    iterationSnitch: 'http://httpbin.org/status/200'
  azure:
    account: jungle
  monitoring:
    project: DISABLED
    enable: false
  app:
    provisionerId: aws-provisioner-dev
    iterationInterval: 10
    awsKeyPrefix: "aws-provisioner-dev:"
    awsInstancePubkey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDbPJ9W0lOXMQX8+ooo054m96IRcyhEJZ+ocdBqklFSlyC+6UZPwDBoY3lmT1PPOE/niVYKjSGqGtnw9Y0iSEE1MuNvrLDzmFd3+mmHOhHVs6buDOdIFS+MXVyjcdhRoZBqCNg1tz9vvq1NXzYZ4DIWo8xQG/Xq5EKcsgRiitl6VfssCw6jZla8YEQ7ARk8EqJ1BbaMfW8PceiqkmpL/SPNnFyKkbnfVkiqjYarLJJZaW21Wq7eEcZZdUOaHuSpFdNlfGORuDD35VjQDNB+QximDrAEDUN2LOKmS718Yf6+w2k72PZkHwMUHxA4GvlkQO61v+Jm/A2fYTp3QPtQuKuh'
    tableSigningKey:          not-a-secret-so-you-cant-guess-it
    tableCryptoKey:           AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
    allowedRegions:
      - 'us-west-1'
      - 'us-west-2'
      - 'us-east-1'
      - 'us-east-2'
      - 'eu-central-1'
    describeInstanceDelay: 1000
    describeSpotRequestDelay: 1000
  ec2manager:
    baseUrl: http://localhost:5555/v1

test:
  app:
    provisionerId: aws-provisioner-test
    workerTypeTableName: TestWorkerTypes
    secretTableName: TestWorkerSecrets
    workerStateTableName: TestWorkerState
    publishQueueMetadata: false
    statsComponent: aws-provisioner-test
    awsKeyPrefix: "aws-provisioner-test-managed:"
    awsInstancePubkey: 'ssh-rsa fake-pubkey'
    allowedRegions:
      - 'us-west-2'
    tableSigningKey:          not-a-secret-so-you-cant-guess-it
    tableCryptoKey:           AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
    describeInstanceDelay: 1000
    describeSpotRequestDelay: 1000
  monitoring:
    project: DISABLED
    enable: false
  server:
    publicUrl: http://localhost:60407
    port: 60407
  azure:
    account: jungle
  deadmanssnitch:
    api:
      key: 'nokey'
    iterationSnitch: 'http://httpbin.org/status/200'
  ec2manager:
    baseUrl: https://ec2-manager-staging.herokuapp.com/v1
